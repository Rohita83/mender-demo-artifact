# Disable git shallow clone. We need full history for validating copyright year of each file.
git:
    depth: false

env:
    global:
        # Should be encrypted or set as private travis variables (in travis settings):
        # - AWS_S3_ACCESS_KEY_ID=''
        # - AWS_S3_SECRET_ACCESS_KEY=''

        - MENDER_VERSION=master
        - MENDER_ARTIFACT_VERSION=3.0.0
        - INTEGRATION_VERSION=2.0.0
        - ARTIFACT_NAME=mender-demo-artifact-$INTEGRATION_VERSION
        - MENDER_DEB_VERSION=2.0.0

before_install:
    - sudo apt update && sudo apt install -y python3-pip
    - sudo pip3 install --upgrade setuptools
    - sudo pip3 install --upgrade -r tests/requirements.txt

before_script:
    # Print build info that binary is compiled with.
    - echo $TRAVIS_COMMIT
    - echo $TRAVIS_TAG
    - echo $TRAVIS_BRANCH
    - echo $TRAVIS_BUILD_NUMBER
    - echo $TRAVIS_REPO_SLUG

    # Rename the branch we're on, so that it's not in the way for the
    # subsequent fetch. It's ok if this fails, it just means we're not on any
    # branch.
    - git branch -m temp-branch || true
    # Git trick: Fetch directly into our local branches instead of remote
    # branches.
    - git fetch origin 'refs/heads/*:refs/heads/*'
    # Get last remaining tags, if any.
    - git fetch --tags origin

jobs:
  include:
    - stage: Build and test
      script:
        - if test -z "$INTEGRATION_VERSION"; then echo "INTEGRATION_VERSION not set!"; fi

        # Check commit compliance.
        - git clone git://github.com/mendersoftware/mendertesting
        - mendertesting/check_commits.sh

        # Build
        - docker build -t mender-demo-artifact --build-arg MENDER_ARTIFACT_VERSION=$MENDER_ARTIFACT_VERSION --build-arg MENDER_VERSION=$MENDER_VERSION --build-arg ARTIFACT_NAME=$ARTIFACT_NAME .
        # Extract artifact
        - mkdir output && docker run --rm -v $PWD/output:/output mender-demo-artifact

        # Build test image
        - ( cd tests/mender_test_containers/docker/ && ./docker-build-raspbian )

        # Tests
        - ( cd tests && python3 -m pytest -v --mender-version $MENDER_VERSION --mender-deb-version $MENDER_DEB_VERSION )

        # Make a versioned copy too.
        - ( cd output
            && mkdir $INTEGRATION_VERSION
            && cp mender-demo-artifact.mender $INTEGRATION_VERSION/mender-demo-artifact.mender
          )

after_success:
    # Make build directory and copy all artifacts to this directory.
    - mkdir build

deploy:
  provider: s3
  access_key_id: "$AWS_S3_ACCESS_KEY_ID"
  secret_access_key: "$AWS_S3_SECRET_ACCESS_KEY"
  bucket: "mender-demo-artifacts"
  skip_cleanup: true
  acl: public_read
  local_dir: output
  on:
    branch: master
